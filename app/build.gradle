apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.jacky.clickhookdemo"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 106
        versionName "1.0.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        sign {
            keyAlias ALIAS
            keyPassword ALIAS_PASSWORD
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.sign
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }

        release {
            signingConfig signingConfigs.sign
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
//        pickFirst 'Landroid/support/v7/recyclerview/extensions/AsyncDifferConfig'
        pickFirst 'android/support/v7/recyclerview/extensions/AsyncDifferConfig.class'
    }

    def evaluateTag = "afterEvalute"
    afterEvaluate {
        println "enter $evaluateTag, $tasks"
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            println "$evaluateTag, dx path: ${dx.getPath()}"
            if (dx.additionalParameters == null) {
                dx.additionalParameters = []
            }
            dx.additionalParameters += '--multi-dex'
            // 设置multidex.keep文件中class为第一个dex文件中包含的class，如果没有下一项设置此项无作用
            dx.additionalParameters += "--main-dex-list=$projectDir/multidex.keep".toString()
            //此项添加后第一个classes.dex文件只能包含-main-dex-list列表中class
            dx.additionalParameters += '--minimal-main-dex'
            //通过上面的number参数代表每个Dex文件中的最大id数，默认�?5535
            dx.additionalParameters += '--set-max-idx-number=65535'
        }
    }
}

// get task name
Task task = project.getTasks().getByName("assemble")
println "task by name(assemble): ${task}"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.0.0'
    implementation 'com.android.support:recyclerview-v7:27.0.0'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation(project(':tracker')) {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    //测试plugin后，难定位问题。（mapping 处理的文件难定位到行）
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}

// 直接引用buildSrc的插件类
apply plugin: 'com.codeless.plugin'

/**
 *      String pluginName = ''
 *     HashSet<String> targetPackages = []
 *     boolean showHelp = false
 *     boolean scanAllPackages = false
 *     boolean watchTimeConsume = true
 *     boolean enable = true
 *     boolean learnMode = false
 */
codelessConfig {
    pluginName = 'codeless-plugin'
    showHelp = true
    logable = true
    learnMode = true
    targetPackages = ['skin.support.app', 'com.common.module.view', 'cn.xhb.onekeyshare']
}